// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: cheer.sql

package queries

import (
	"context"

	"github.com/google/uuid"
)

const recordCheerInflow = `-- name: RecordCheerInflow :one
insert into ledger.flow (
    id,
    type,
    metadata,
    twitch_user_id,
    delta_points,
    created_at,
    finalized_at,
    accepted
) values (
    gen_random_uuid(),
    'cheer',
    jsonb_build_object('message', $1::text),
    $2,
    $3,
    now(),
    now(),
    true
)
returning flow.id
`

type RecordCheerInflowParams struct {
	Message           string
	TwitchUserID      string
	NumPointsToCredit int32
}

func (q *Queries) RecordCheerInflow(ctx context.Context, arg RecordCheerInflowParams) (uuid.UUID, error) {
	row := q.db.QueryRowContext(ctx, recordCheerInflow, arg.Message, arg.TwitchUserID, arg.NumPointsToCredit)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}
